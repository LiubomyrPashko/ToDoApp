[{"/Users/user/Documents/projects/MERN todo/client/src/index.js":"1","/Users/user/Documents/projects/MERN todo/client/src/App.js":"2","/Users/user/Documents/projects/MERN todo/client/src/reportWebVitals.js":"3","/Users/user/Documents/projects/MERN todo/client/src/header.js":"4","/Users/user/Documents/projects/MERN todo/client/src/card.js":"5","/Users/user/Documents/projects/MERN todo/client/src/allCards.js":"6","/Users/user/Documents/projects/MERN todo/client/src/addCard.js":"7","/Users/user/Documents/projects/MERN todo/client/src/search.js":"8","/Users/user/Documents/projects/MERN todo/client/src/context.js":"9"},{"size":518,"mtime":1609291842138,"results":"10","hashOfConfig":"11"},{"size":298,"mtime":1609581283882,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1608250137604,"results":"13","hashOfConfig":"11"},{"size":1525,"mtime":1609581770904,"results":"14","hashOfConfig":"11"},{"size":2011,"mtime":1609287023381,"results":"15","hashOfConfig":"11"},{"size":1024,"mtime":1609581267827,"results":"16","hashOfConfig":"11"},{"size":1864,"mtime":1609289382166,"results":"17","hashOfConfig":"11"},{"size":173,"mtime":1609554223032,"results":"18","hashOfConfig":"11"},{"size":517,"mtime":1609582575755,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"opyvqs",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/user/Documents/projects/MERN todo/client/src/index.js",[],["43","44"],"/Users/user/Documents/projects/MERN todo/client/src/App.js",["45"],"import 'bootstrap/dist/css/bootstrap.min.css'\nimport AllItems from './allCards'\nimport Header from './header'\nimport { SearchProvider, useSearch } from './context'\n\nfunction App() {\n  return (\n    <SearchProvider>\n      <Header />\n      <AllItems />\n    </SearchProvider>\n  )\n}\n\nexport default App\n","/Users/user/Documents/projects/MERN todo/client/src/reportWebVitals.js",[],"/Users/user/Documents/projects/MERN todo/client/src/header.js",["46","47"],"import Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport Button from 'react-bootstrap/Button'\nimport Form from 'react-bootstrap/Form'\nimport FormControl from 'react-bootstrap/FormControl'\nimport { useState } from 'react'\nimport { SearchProvider, useSearch } from './context'\n\nconst Header = () => {\n  const [query, setQuery] = useState()\n  const [allCards, setAllCards] = useSearch()\n\n  function search() {\n    let searchedTitleObj = { title: query }\n    console.log(searchedTitleObj)\n    fetch('http://localhost:5000/search', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(searchedTitleObj),\n    })\n      .then((res) => res.json()) // or res.json()\n      .then((data) => {\n        setAllCards(data.tasks)\n      })\n  }\n  return (\n    <>\n      <Navbar bg='dark' variant='dark'>\n        <Navbar.Brand href='#home'>To Do</Navbar.Brand>\n        <Nav className='mr-auto'>\n          <Nav.Link href='#home'>Home</Nav.Link>\n          <Nav.Link href='#features'>Features</Nav.Link>\n          <Nav.Link href='#pricing'>Pricing</Nav.Link>\n        </Nav>\n        <Form inline>\n          <FormControl\n            type='text'\n            placeholder='Search'\n            className='mr-sm-2'\n            onChange={(e) => e.preventDefault() || setQuery(e.target.value)}\n          />\n          <Button variant='outline-info' onClick={search}>\n            Search\n          </Button>\n        </Form>\n      </Navbar>\n    </>\n  )\n}\n\nexport default Header\n","/Users/user/Documents/projects/MERN todo/client/src/card.js",[],"/Users/user/Documents/projects/MERN todo/client/src/allCards.js",["48"],"import { useEffect, useState } from 'react'\nimport Item from './card'\nimport './allCards.css'\nimport AddItem from './addCard'\nimport React from 'react'\nimport { SearchProvider, useSearch } from './context'\n\nconst AllItems = () => {\n  const [allCards, setAllCards] = useState([])\n  const [searchedCards] = useSearch()\n  function sendRequest(method, url) {\n    return fetch(url)\n      .then((response) => {\n        return response.json()\n      })\n      .then((data) => {\n        setAllCards(data.tasks)\n      })\n  }\n  useEffect(() => {\n    sendRequest('GET', 'http://localhost:5000/get')\n  }, [])\n  useEffect(() => {\n    setAllCards(searchedCards)\n  }, [searchedCards])\n  return (\n    <div className='container'>\n      {allCards.map((item) => {\n        return (\n          <Item\n            key={item._id}\n            _id={item._id}\n            title={item.title}\n            description={item.description}\n            arr={allCards}\n          />\n        )\n      })}\n      <AddItem />\n    </div>\n  )\n}\n\nexport default AllItems\n","/Users/user/Documents/projects/MERN todo/client/src/addCard.js",[],["49","50"],"/Users/user/Documents/projects/MERN todo/client/src/search.js",["51"],"/Users/user/Documents/projects/MERN todo/client/src/context.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":26,"nodeType":"58","messageId":"59","endLine":4,"endColumn":35},{"ruleId":"56","severity":1,"message":"60","line":7,"column":10,"nodeType":"58","messageId":"59","endLine":7,"endColumn":24},{"ruleId":"56","severity":1,"message":"61","line":11,"column":10,"nodeType":"58","messageId":"59","endLine":11,"endColumn":18},{"ruleId":"56","severity":1,"message":"60","line":6,"column":10,"nodeType":"58","messageId":"59","endLine":6,"endColumn":24},{"ruleId":"52","replacedBy":"62"},{"ruleId":"54","replacedBy":"63"},{"ruleId":"56","severity":1,"message":"64","line":4,"column":20,"nodeType":"58","messageId":"59","endLine":4,"endColumn":31},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'useSearch' is defined but never used.","Identifier","unusedVar","'SearchProvider' is defined but never used.","'allCards' is assigned a value but never used.",["65"],["66"],"'setAllCards' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]